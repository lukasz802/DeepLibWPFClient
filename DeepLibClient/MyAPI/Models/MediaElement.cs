// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace DeepLibClient.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using System.ComponentModel;

    public partial class MediaElement : INotifyPropertyChanged
    {
        /// <summary>
        /// Initializes a new instance of the MediaElement class.
        /// </summary>
        public MediaElement() { }

        /// <summary>
        /// Initializes a new instance of the MediaElement class.
        /// </summary>
        public MediaElement(int? mediaElementId = default(int?), string title = default(string), string year = default(string), string cover = default(string), string comment = default(string), string userLoginWhoChangedStatus = default(string), bool? isBorrowed = default(bool?), DateTime? borrowDate = default(DateTime?), int? mediaType = default(int?), int? creatorId = default(int?), Creator creator = default(Creator))
        {
            MediaElementId = mediaElementId;
            Title = title;
            Year = year;
            Cover = cover;
            Comment = comment;
            UserLoginWhoChangedStatus = userLoginWhoChangedStatus;
            IsBorrowed = isBorrowed;
            BorrowDate = borrowDate;
            MediaType = mediaType;
            CreatorId = creatorId;
            Creator = creator;
        }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "mediaElementId")]
        public int? MediaElementId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "title")]
        public string Title { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "year")]
        public string Year
        { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "cover")]
        public string Cover
        {
            get { return _cover; }
            set
            {
                _cover = value;
                OnPropertyChanged();
            }
        }

        private string _cover;

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "comment")]
        public string Comment { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "userLoginWhoChangedStatus")]
        public string UserLoginWhoChangedStatus { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "isBorrowed")]
        public bool? IsBorrowed { get; set; }

        /// <summary>
        /// </summary>
        [JsonConverter(typeof(DateJsonConverter))]
        [JsonProperty(PropertyName = "borrowDate")]
        public DateTime? BorrowDate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "mediaType")]
        public int? MediaType { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "creatorId")]
        public int? CreatorId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "creator")]
        public Creator Creator { get; set; }

        public event PropertyChangedEventHandler PropertyChanged;

        private void OnPropertyChanged([System.Runtime.CompilerServices.CallerMemberName] string propertyName = "")
        {
            this.PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));
        }
    }
}
